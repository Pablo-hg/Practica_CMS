1º OBJETIVOS
    -Zona pública/front-end:
        -Layout con cabecera, menú y pie para todas las páginas.
         Página principal o Home con contenido estático y noticias destacadas.
         Página de listado de noticias.
         Página de noticia individual con título, entradilla, fecha, autor, texto e imagen asociada.
         Página estática de Acerca de.
    -Panel de control/back-end:
        -Acceso restringido mediante usuario y contraseña.
         Layout con cabecera, menú y pie para todas las páginas (salvo la de acceso)
         Gestión de usuarios.
         Gestión de noticias.

2ºESTRUCTURA
    -cms
        -controller
            -AppController.php
            -NoticiaController.php
            -Usuario.Controller.php
        -helper
            -DbHelper.php
            -ViewHelper.php
        -model
            -Noticia.php
            -Usuario.php
        -public
            -css
                -admin.css
                -app.css
            -img
                -escudos.png
                -logo.svg
            -js
                -admin.js
                -app.js
            -index.php
        -view
            -admin
                -noticias
                    -editar.php
                    -index.php
                -partials
                    -footer.php
                    -header.php
                    -mensajes.php
                -usuarios
                    -editar.php
                    -entrar.php
                    -index.php
                -index.php
            -app
                -partials
                    -footer.php
                    -header.php
                -acerca-de.php
                -index.php
                -noticia.php
                -noticias.php
*dar permidoso a la carpeta img para subir imagenes -->   sudo chown -R www-data:www-data cms/public/img

3ºLA BASE DE DATOS
    -Accedemos a la consola de MySQL (ya sea por codigo o por interfaz) --> mysql -u root -p(intro) y contraseña
    -Creamos la base de datos --> CREATE DATABASE cms CHARACTER SET utf8 COLLATE utf8_general_ci;
    -Creamos un usuario con contraseña restringido a la bbdd de "cms" y a las operaciones basicas
        --> CREATE USER 'usuario-cms'@'localhost' IDENTIFIED BY 'introduce-la-password';
            GRANT INSERT,SELECT,UPDATE,DELETE ON cms.* TO 'usuario-cms'@'localhost';
    -Creamos la tabla de los "usuarios"
        --> USE cms;
            CREATE TABLE `usuarios` (
              `id` int(3) NOT NULL AUTO_INCREMENT,
              `usuario` varchar(16) NOT NULL,
              `clave` varchar(64) NOT NULL,
              `fecha_acceso` datetime DEFAULT NULL,
              `activo` tinyint(1) NOT NULL DEFAULT '0',
              `usuarios` tinyint(1) NOT NULL DEFAULT '0',
              `noticias` tinyint(1) NOT NULL DEFAULT '1',
              PRIMARY KEY (`id`),
              UNIQUE KEY `usuario` (`usuario`),
              UNIQUE KEY `id` (`id`)
            ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
    -Creamos la tabla de noticias
        --> USE cms;
            CREATE TABLE `noticias` (
              `id` int(3) NOT NULL AUTO_INCREMENT,
              `titulo` varchar(32) NOT NULL DEFAULT '',
              `slug` varchar(36) DEFAULT '',
              `entradilla` varchar(128) DEFAULT '',
              `texto` longtext,
              `activo` tinyint(1) NOT NULL DEFAULT '0',
              `home` tinyint(1) NOT NULL DEFAULT '0',
              `fecha` datetime DEFAULT NULL,
              `autor` varchar(64) DEFAULT NULL,
              `imagen` varchar(64) DEFAULT NULL,
              PRIMARY KEY (`id`),
              UNIQUE KEY `id` (`id`)
            ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

4ºARCHIVO PUBLIC/INDEX.PHP
    -Por el archivo public/index.php deben pasar todas las peticiones a nuestro web, pues será el encargado de examinar
        las peticiones a las acciones y vistas correspondientes mediante un sistema de toma de decisiones.
    -EL archivo debe ser capaz de enrutar las siguientes peticiones en el front-end:
        - /: Inicio o home (http://ruta-hasta-mi-directorio/index.php) con una presentación de la web y las noticias destacadas con un estilo similar a las del listado de noticias
        - /acerca-de: Página de información de la página (autor, empresa, etc.)
        - /noticias: Listado de noticias ordenado por fecha más reciente con título, entradilla, fecha, miniatura y enlace a la noticia individual.
        - /noticia/slug-de-la-noticia: Noticia indivuidual con la noticia completa y la foto en grande.
        - cualquier-otra-ruta: Redirección a la home.
    -Y las siguientes a back-end:
        - /admin: Página de inicio del panel de administración (una vez autenticado) con enlaces a las diferentes secciones en función de los permisos. Si no está autenticado, redirección a la página de acceso.
        - /admin/entrar: Página con formulario acceso al panel de administración (usuario y contraseña)
        - /admin/salir: Ruta para desconectar del panel de administración que después redireccionará a la página de acceso.
        - /admin/usuarios: Listado de usuarios ordenado alfabéticamente y con enlaces a crear, editar, activar y borrar.
        - /admin/usuarios/crear: Vista de formulario de creación de nuevo usuario con opciones de guardar y descartar.
        - /admin/usuarios/editar/id: Vista de formulario de edición de usuario con opciones de guardar y descartar.
        - /admin/usuarios/activar/id: Enlace a activar/desactivar usuario y posterior redirección a listado de usuarios con mensaje de éxito.
        - /admin/usuarios/borrar/id: Enlace a borrar usuario (previa confirmación) y posterior redirección a listado de usuarios con mensaje de éxito.
        - /admin/noticias: Listado de noticias ordenado por fecha más reciente, con miniatura y enlaces a crear, editar, activar y borrar.
        - /admin/noticias/crear: Vista de formulario de creación de nueva noticia con opciones de guardar y descartar.
        - /admin/noticias/editar/id: Vista de formulario de edición de noticia con opciones de guardar y descartar.
        - /admin/noticias/activar/id: Enlace a activar/desactivar noticia y posterior redirección a listado de noticias con mensaje de éxito.
        - /admin/noticias/home/id: Enlace a destacar o no la noticia en la home y posterior redirección a listado de noticias con mensaje de éxito.
        - /admin/noticias/borrar/id: Enlace a borrar noticia (previa confirmación) y posterior redirección a listado de noticias con mensaje de éxito.
        - /admin/cualquier-otra-ruta: Redirección a /admin.
        *Todas las rutas del front-end compartirán el mismo layout (head, header, nav y footer), al igual que todas
            las rutas del back-end, que también compartirán su propio layout.

5ºDIRECTORIO HELPER
    -Este directorio contendrá las clases DbHelper y ViewHelper encargadas, respectivamente, de gestionar la conexión
        con la base de de datos y la llamada a las vistas correspondientes.
    -DbHelper --> Esta clase solo tendrá un constructor encargado de generar una conexión a la base de datos que luego podremos
                  utilizar para las diferentes consultas. (cambiar el usuario y la contraseña)
    -ViewHelper --> Esta clase se encargará de gestionar las vistas de las diferentes acciones, así como de pasar los datos de los modelos en caso necesario.
                    Adicionalmente, incluirá las llamadas al layout correspondiente.

6ºDIRECTORIO MODEL
    -Este directorio contendrá las clases Noticia.php y Usuario.php.
    -En ambos cosas consistirán en un construct que recogerá los datos de la consulta a la base de datos
     (o null si estoy creando uno nuevo) y los asignará a las distintas variables.

7ºAPPCONTROLLER
    -AppController será el controlador encargado de gestionar el front-end de nuestro CMS, esto es,
        las páginas visibles a todos los usuarios sin restricción.
    -Además de invocar los modelos y helpers correspondientes en el construct , utilizaremos dentro de él
        cuatro métodos correspondientes a las acciones, a saber:
            -index() para la home incluyendo el listado de noticias destacadas ordenadas por fecha más reciente.
            -acercade() para la página de información.
            -noticias() para el listado de noticias ordenado por fecha más reciente.
            -noticia($slug) para la página de noticia individual.

8ºVISTAS DEL FRONT-END
    -En este apartado generaremos las vistas del front-end así como el layout correspondiente.
    -Añadimos 4 noticias a la tabla noticias con diferentes datos.
    -HEADER
        -El archivo view/app/partials/header.php incluirá lo siguiente:
            -Etiqueta html (apertura).
            -Etiqueta head con todas las etiquetas y llamadas a estilos necesarias.
            -Etiqueta body (apertura).
            -Etiqueta nav para el menú de navegación y el logo
            -Etiqueta main(apertura).
            -Etiqueta header con título y subtítulo.
            -Etiqueta section(apertura).
    -FOOTER
        -El archivo view/app/partials/footer.php incluirá lo siguiente:
            -Etiqueta section (cierre).
            -Etiqueta main(cierre).
            -Etiqueta body (cierre).
            -Etiqueta footer con información institucional y copyright.
            -Llamadas a scripts necesarias.
            -Etiqueta html (cierre).
    -HOJA DE ESTILOS
        -public/css/app.css --> añadimos estilo un poco a todo
    -JAVASCRIPT
        -public/js/app.js
    -VISTA HOME
        -view/app/index.php
    -VISTA NOTICIAS
        -view/app/noticias.php
    -VISTA NOTICIA
        -view/app/noticia.php
    -VISTA ACERCA DE
        -view/app/acerca-de.php

9ºUSUARIOCONTROLLER







